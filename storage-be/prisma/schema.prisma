// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ManageAccess {
  PRIVATE
  PUBLIC
}

enum ProjectRole {
  OWNER
  MEMBER
}

model User {
  id               String  @id @unique @default(uuid())
  username         String  @unique @db.VarChar(50)
  email            String  @unique @db.VarChar(255)
  displayName      String  @db.VarChar(50)
  hashRefreshToken String?
  isLocked         Boolean @default(true)
  password         String

  lastLogin DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  setting       Setting?
  workspaceList Workspace[]
  // otpAttempts   OtpAttempts?
}

// model OtpAttempts {
//   id           String   @id @unique @default(uuid())
//   attemptCount Int      @default(0)
//   user         User     @relation(fields: [userId], references: [id])
//   userId       String   @unique
//   otp          String
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @default(now())
// }

model Setting {
  id             String   @id @default(uuid())
  role           Role     @default(USER)
  maxSizeStorage Int      @default(5120) // calculate base binary 2^20, GiB to MiB = x * 1024 => 5GiB = 5 * 1024 = 5120
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @unique
}

model Workspace {
  id            String  @id @default(uuid())
  workspaceName String  @unique @db.VarChar(255)
  totalSize     Int     @default(0)
  description   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  folderList Folder[]
  fileList   File[]
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model Folder {
  id          String       @id @default(uuid())
  folderName  String       @unique @db.VarChar(255)
  totalSize   Int          @default(0)
  access      ManageAccess @default(PUBLIC)
  path        String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?

  fileList File[]
}

model File {
  id          String       @id @default(uuid())
  fileName    String       @unique @db.VarChar(255)
  access      ManageAccess @default(PUBLIC)
  ext         String       @default("unknown")
  size        Int          @default(0)
  path        String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?

  Folder   Folder? @relation(fields: [folderId], references: [id])
  folderId String?
}
